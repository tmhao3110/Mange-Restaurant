/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JInternal;

import static JInternal.HDJInternalFrame.khachHang;
import static JInternal.HDJInternalFrame.lbTongTien;
import static JInternal.HDJInternalFrame.tfDiem;
import static JInternal.HDJInternalFrame.tfGiamGia;
import static JInternal.HDJInternalFrame.tfTenKH;
import dao.HoaDonChiTietDAO;
import dao.HoaDonDAO;
import dao.LoaiSPDAO;
import dao.SanPhamDAO;
import dao.TheKhachHangDAO;
import frame.QRforBill;
import helper.ShareHelper;
import java.sql.DriverManager;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Hashtable;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import model.ChiTietDonHang;
import model.DonHang;
import model.LoaiSP;
import model.SanPham;
import model.TheKhachHang;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author This my name
 */
public class HDJInternalFrame extends javax.swing.JInternalFrame {

    private String[] TieuDeSP = {"Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Đơn giá", "Ghi chú"};
    private String[] TieuDeHD = {"STT", "Mã sản phẩm", "Tên sản phẩm", "Đơn giá", "Số lượng", "Thành tiền"};
    private DefaultTableModel table = new DefaultTableModel(TieuDeSP, 0);
    private DefaultTableModel tableHD = new DefaultTableModel(TieuDeHD, 0);
    private SanPhamDAO spDAO = new SanPhamDAO();
    private HoaDonDAO dhDAO = new HoaDonDAO();
    private HoaDonChiTietDAO hdctDAO = new HoaDonChiTietDAO();
    private LoaiSPDAO loaiSPDAO = new LoaiSPDAO();
    public static TheKhachHang khachHang = null;
    private TheKhachHangDAO khDAO = new TheKhachHangDAO();

    /**
     * Creates new form hoadonNEW
     */
    public HDJInternalFrame() {
        initComponents();
        this.RemoveHeader();
        LoadDBSP();
        fillTableFollowByMaLoai();
        filltoCBB();
        lbNgayTao.setText(LocalDateTime.now().toString());
        lbMaDH.setText(SoHD());
    }

    private void RemoveHeader() {
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbMaDH = new javax.swing.JLabel();
        lbNgayTao = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbHoaDon = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        tfGiamGia = new javax.swing.JTextField();
        tfTenKH = new javax.swing.JTextField();
        tfDiem = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lbTongTien = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tfGhiChu = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lbTienThoi = new javax.swing.JLabel();
        tfKhachDua = new javax.swing.JTextField();
        btnQRKH = new javax.swing.JButton();
        lbDonGiaTam = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSanPham = new javax.swing.JTable();
        cbbLoai = new javax.swing.JComboBox<>();
        tfSearch = new javax.swing.JTextField();
        lbMaMonAn = new javax.swing.JLabel();
        lbTenMonAn = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        btAdd = new javax.swing.JButton();
        lbDonGia = new javax.swing.JLabel();
        btnXuatHoaDon = new javax.swing.JButton();
        btLamMoiHD = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1500, 630));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("HÓA ĐƠN CHI TIẾT");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Mã Đơn Hàng:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Ngày Tạo:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Tên Khách Hàng:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Điểm: ");

        lbMaDH.setText("cvc");

        lbNgayTao.setText("LocalDateTime.now()");

        tbHoaDon.setBackground(new java.awt.Color(240, 240, 240));
        tbHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbHoaDon);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Giảm giá");

        tfGiamGia.setText("0.0");

        tfTenKH.setBackground(new java.awt.Color(240, 240, 240));
        tfTenKH.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfDiem.setBackground(new java.awt.Color(240, 240, 240));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Tổng tiền");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("VNĐ");

        tfGhiChu.setColumns(20);
        tfGhiChu.setRows(5);
        jScrollPane3.setViewportView(tfGhiChu);

        jLabel11.setFont(jLabel11.getFont().deriveFont(jLabel11.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel11.setText("Ghi chú");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Khách đưa");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Trả lại");

        tfKhachDua.setBackground(new java.awt.Color(240, 240, 240));
        tfKhachDua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfKhachDuaKeyReleased(evt);
            }
        });

        btnQRKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_qr_code_40px_3.png"))); // NOI18N
        btnQRKH.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnQRKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQRKHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbMaDH)
                            .addComponent(lbNgayTao))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(tfDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnQRKH, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tfKhachDua, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(tfGiamGia, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTongTien, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbTienThoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(73, 73, 73))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lbMaDH))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tfTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(lbNgayTao))
                            .addComponent(btnQRKH, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(lbTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(tfKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lbTienThoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 30, 700, 520));

        lbDonGiaTam.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbSanPham);

        cbbLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));

        tfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfSearchKeyReleased(evt);
            }
        });

        lbMaMonAn.setText("Mã món ăn");

        lbTenMonAn.setText("Tên món ăn");

        jLabel16.setText("Số Lượng");

        btAdd.setText("Add");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        lbDonGia.setText("Đơn Giá");

        javax.swing.GroupLayout lbDonGiaTamLayout = new javax.swing.GroupLayout(lbDonGiaTam);
        lbDonGiaTam.setLayout(lbDonGiaTamLayout);
        lbDonGiaTamLayout.setHorizontalGroup(
            lbDonGiaTamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lbDonGiaTamLayout.createSequentialGroup()
                .addGroup(lbDonGiaTamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(lbDonGiaTamLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lbMaMonAn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbTenMonAn))
                    .addGroup(lbDonGiaTamLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(cbbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(lbDonGiaTamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lbDonGiaTamLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(lbDonGiaTamLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(lbDonGia)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel16)
                        .addGap(29, 29, 29)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(btAdd)))
                .addContainerGap(171, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        lbDonGiaTamLayout.setVerticalGroup(
            lbDonGiaTamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lbDonGiaTamLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(lbDonGiaTamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(lbDonGiaTamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMaMonAn)
                    .addComponent(lbTenMonAn)
                    .addComponent(lbDonGia)
                    .addComponent(jLabel16)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(lbDonGiaTam, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 710, 520));

        btnXuatHoaDon.setText("Xuất Hóa Đơn");
        btnXuatHoaDon.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnXuatHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatHoaDonActionPerformed(evt);
            }
        });
        jPanel1.add(btnXuatHoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 560, 100, 30));

        btLamMoiHD.setText("Làm mới hóa đơn");
        btLamMoiHD.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btLamMoiHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLamMoiHDActionPerformed(evt);
            }
        });
        jPanel1.add(btLamMoiHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 560, 130, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Tính tổng tiền của hóa đơn
    int tongtien = 0;

    private void TongTien() {

        for (int index = 0; index < tbHoaDon.getRowCount(); index++) {
            int thanhtien = Integer.parseInt(tbHoaDon.getValueAt(index, 5).toString());
            tongtien += thanhtien;
        }
        String TongTien = String.valueOf(tongtien);
        lbTongTien.setText(TongTien);
    }

//    Khách đưa và trả lại
    private void tfKhachDuaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfKhachDuaKeyReleased
        try {
            Double Khachdua = Double.parseDouble(tfKhachDua.getText());
            Double ThoiTien = tongtien - Khachdua;
            String thoiTien = String.valueOf(ThoiTien);
            lbTienThoi.setText(thoiTien);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nhập cho đàng hoàng vào" + e);
        }
    }//GEN-LAST:event_tfKhachDuaKeyReleased

//    Lọc theo Loại SP
    private void fillTableFollowByMaLoai() {

        table.setRowCount(0);

        if (cbbLoai.getSelectedIndex() == 0) {
            List<SanPham> list = spDAO.select();
            for (SanPham cd : list) {
                Object[] row
                        = {
                            cd.getMASP(),
                            cd.getTENSP(),
                            cd.getSOLUONG(),
                            cd.getDONGIA(),
                            cd.getGHICHU()
                        };
                table.addRow(row);
                tbSanPham.setModel(table);
            }
        }
        if (cbbLoai.getSelectedItem() == null) {

        } else {
            try {
                String maloai = String.valueOf(cbbLoai.getSelectedIndex());
                List<SanPham> list = spDAO.getSanPhamByMaLoai2(maloai);
                for (SanPham cd : list) {
                    Object[] row
                            = {
                                cd.getMASP(),
                                cd.getTENSP(),
                                cd.getSOLUONG(),
                                cd.getDONGIA(),
                                cd.getGHICHU()
                            };
                    table.addRow(row);
                    tbSanPham.setModel(table);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    //  Đổ dữ liệu vào comboboxx
    private void filltoCBB() {
        DefaultComboBoxModel cbb = (DefaultComboBoxModel) cbbLoai.getModel();
        List<LoaiSP> loai = loaiSPDAO.select();
        for (LoaiSP sp : loai) {
            cbb.addElement(sp);
        }
    }

    private void btnQRKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQRKHActionPerformed

        QRforBill a = new QRforBill();
        a.setVisible(true);

    }//GEN-LAST:event_btnQRKHActionPerformed

    //    Show vào các label để nhập số lượng
    private void NhapSoLuong() {
        int index = tbSanPham.getSelectedRow();

        String TenSP = (String) tbSanPham.getValueAt(index, 1);
        String MaSP = tbSanPham.getValueAt(index, 0).toString();
        Double DonGia = Double.parseDouble(tbSanPham.getValueAt(index, 3).toString());
        String Dongia = String.valueOf(tbSanPham.getValueAt(index, 3));
        jSpinner1.setValue(1);
        lbMaMonAn.setText(MaSP);
        lbTenMonAn.setText(TenSP);
        lbDonGia.setText(Dongia);

    }

    private void tbSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSanPhamMouseClicked
        if (evt.getClickCount() >= 1) {
            NhapSoLuong();
        }
    }//GEN-LAST:event_tbSanPhamMouseClicked

    //    Giảm giá theo từng hóa đơn
    public static void GiamGia(int DiemHienCo) {
        if (khachHang != null) {
            tfTenKH.setText(khachHang.getTenKH());
            tfDiem.setText(String.valueOf(khachHang.getDiemTich()));
        }
        if (DiemHienCo < 1000) {
            tfGiamGia.setText("0");

        } else if (DiemHienCo >= 1000 && DiemHienCo < 2000) {
            tfGiamGia.setText("5");
            int TongTien = (Integer.parseInt(lbTongTien.getText()) * 5) / 100;
            lbTongTien.setText(String.valueOf(TongTien));

        } else if (DiemHienCo >= 2000 && DiemHienCo < 3000) {
            tfGiamGia.setText("10");
            int TongTien2 = (Integer.parseInt(lbTongTien.getText()) * 10) / 100;
            lbTongTien.setText(String.valueOf(TongTien2));

        } else if (DiemHienCo >= 3000 && DiemHienCo < 5000) {
            tfGiamGia.setText("15");
            int TongTien3 = (Integer.parseInt(lbTongTien.getText()) * 15) / 100;
            lbTongTien.setText(String.valueOf(TongTien3));
        } else if (DiemHienCo >= 5000) {
            tfGiamGia.setText("30");
            int TongTien4 = (Integer.parseInt(lbTongTien.getText()) * 30) / 100;
            lbTongTien.setText(String.valueOf(TongTien4));
        }
    }

    private void tfSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchKeyReleased

        String tensp = tfSearch.getText();
        String maloai = String.valueOf(cbbLoai.getSelectedIndex());
        List<SanPham> listAll = spDAO.findSanPhamAllTK(tensp);
        List<SanPham> list = spDAO.findSanPhamTK(tensp, maloai);

        table.setRowCount(0);

        if (cbbLoai.getSelectedIndex() == 0) {
            for (SanPham cd : listAll) {
                Object[] row
                        = {
                            cd.getMASP(),
                            cd.getTENSP(),
                            cd.getSOLUONG(),
                            cd.getDONGIA(),
                            cd.getGHICHU()
                        };
                table.addRow(row);
                tbSanPham.setModel(table);
            }
        } else {
            for (SanPham cd : list) {
                Object[] row
                        = {
                            cd.getMASP(),
                            cd.getTENSP(),
                            cd.getSOLUONG(),
                            cd.getDONGIA(),
                            cd.getGHICHU()
                        };
                table.addRow(row);
                tbSanPham.setModel(table);
            }
        }

    }//GEN-LAST:event_tfSearchKeyReleased

//    Thêm sản phẩm vào table Hóa đơn
    int index = 1;
    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed

        String MaSP = lbMaMonAn.getText();
        String TenSP = lbTenMonAn.getText();
        String Dongia = lbDonGia.getText();
        int Soluong = Integer.parseInt(jSpinner1.getValue().toString());
        String soLuong = String.valueOf(Soluong);
        int DonGia = Integer.parseInt(Dongia);
        int ThanhTien = DonGia * Soluong;
        String Thanhtien = String.valueOf(ThanhTien);
        Object[] row = {index, MaSP, TenSP, DonGia, soLuong, ThanhTien};
        tableHD.addRow(row);
        tbHoaDon.setModel(tableHD);
        index++;
        TongTien();
    }//GEN-LAST:event_btAddActionPerformed

    //    Thêm HD
    private void ThanhToan() {
        if (tbHoaDon.getRowCount() <= 0) {
            JOptionPane.showMessageDialog(this, "Chưa có sản phẩm nào được chọn");
            return;
        }
        DonHang dh = new DonHang();
        dh.setMaDH(lbMaDH.getText());
        dh.setMaNV(ShareHelper.USER.getMaNV());
        dh.setNgayBan(LocalDate.now());
        dh.setMaKH(32);
        dh.setTenKH(tfTenKH.getText());
        dh.setTongTien(Float.valueOf(lbTongTien.getText()));
//        
//            // tiến hành tích điểm
        if (khachHang != null) {
            TichDiem(Integer.valueOf(khachHang.getMaKH()), Integer.parseInt(lbTongTien.getText()));
        }

//////        insert vào hóa đơn
        dhDAO.insert(dh);
////            Set MaHD
        DonHang ab = dhDAO.FindbyID(dh.getMaDH());
        dh.setMaDH(ab.getMaDH());
////       insert vao hdct
        ThemHDCT(ab.getMaDH());
        System.out.println(ab.getMaDH());
//         Xuất hóa đơn

        XuatHoaDon(ab.getMaDH());

    }

    //    add từ table vào CTHD
    private void ThemHDCT(String MaHD) {
        String Notes = tfGhiChu.getText();
        float Giamgia = Float.valueOf(tfGiamGia.getText());
        for (int i = 0; i < tbHoaDon.getRowCount(); i++) {
            int Masp = Integer.parseInt(tbHoaDon.getValueAt(i, 1).toString());
            String TenSP = String.valueOf(tbHoaDon.getValueAt(i, 2));
            float DonGia = Float.parseFloat(tbHoaDon.getValueAt(i, 3).toString());
            int Soluong = Integer.parseInt(tbHoaDon.getValueAt(i, 4).toString());
            float Thanhtien = Float.parseFloat(tbHoaDon.getValueAt(i, 5).toString());
            CTHD(MaHD, Masp, TenSP, Soluong, DonGia, Giamgia, Thanhtien, Notes);
        }

    }

    //    Tích điểm cho khách hàng
    public void TichDiem(int Makh, int Money) {
        int DiemHienCo = 0;
        if (Money >= 500000) {
            int Score = (Money / 50000) * 10;
            if (tfDiem.getText() != null) {
                DiemHienCo = Integer.parseInt(tfDiem.getText());
                DiemHienCo += Score;
                khDAO.UpdateDiem(DiemHienCo, Makh);
            }
        }
    }

    //    Số Hóa đơn
    private DateTimeFormatter format = DateTimeFormatter.ofPattern("yyMMdd");
    private LocalDate date = LocalDate.now();
    private String datez = date.format(format);
    private int STT = 0;

    private String SoHD() {
        String SoHoaDon = "HD" + datez;
        STT++;
        if (STT < 9) {
            SoHoaDon = SoHoaDon + "0" + STT;
            System.out.println(STT);
            return SoHoaDon;
        }
        if (STT < 99) {
            SoHoaDon = SoHoaDon + "0" + STT;
            return SoHoaDon;
        }
        if (STT > 99) {
            SoHoaDon = SoHoaDon + STT;
            return SoHoaDon;
        }
        return SoHoaDon;
    }

    //    Thêm chi tiết hóa đơn
    private void CTHD(String MaHD, int masp, String TenSP, int soluong, float Dongia, float giamgia,
            float thanhTien, String ghiChu) {

        ChiTietDonHang ctdh = new ChiTietDonHang();
        ctdh.setMaDH(MaHD);
        ctdh.setMaSP(masp);
        ctdh.setTenSP(TenSP);
        ctdh.setSoLuong(soluong);
        ctdh.setDonGia(Dongia);
        ctdh.setGiamGia(giamgia);
        ctdh.setThanhTien(thanhTien);
        ctdh.setMoTa(ghiChu);

        hdctDAO.insert(ctdh);

    }
    //    Tạo hàm xuất hóa đơn

    public void XuatHoaDon(String MADH) {
        try {
            Hashtable map = new Hashtable();
            JasperReport report = JasperCompileManager.compileReport("src/frame/HoaDon.jrxml");

            map.put("MADH", MADH);

            JasperPrint p = JasperFillManager.fillReport(report, map, DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName = Project_1_test1;user = SA;password = 123456;"));
            JasperViewer.viewReport(p, false);
            JasperExportManager.exportReportToPdfFile(p, "HoaDon.pdf");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Xuất hóa đơn không thành công" + ex);
        }
    }

    // Làm mới hóa đơn
    private void New() {
        tableHD.setRowCount(0);
        tbHoaDon.setModel(tableHD);
        lbTongTien.setText("0");
        lbTienThoi.setText("0");
        tfGhiChu.setText("");
        lbNgayTao.setText(LocalDateTime.now().toString());
        tfTenKH.setText("");
        tfDiem.setText("0");
        tfGiamGia.setText("0.0");
        tfKhachDua.setText("0");

    }


    private void btnXuatHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatHoaDonActionPerformed
        ThanhToan();
        New();
        lbMaDH.setText(SoHD());
    }//GEN-LAST:event_btnXuatHoaDonActionPerformed

    private void btLamMoiHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLamMoiHDActionPerformed
        New();
    }//GEN-LAST:event_btLamMoiHDActionPerformed

    //    Đổ dữ liệu lên bảng sản phẩm
    private void LoadDBSP() {
        table.setRowCount(0);
        try {
            List<SanPham> list = spDAO.select();
            showtotable(list);
        } catch (Exception ex) {
            System.out.println("Lỗi đổ dữ liệu lên bảng sản phẩm" + ex);
        }
    }

//             Đọc dữ liệu về Show lên bảng sản phầm
    private void showtotable(List<SanPham> sp) {
        for (SanPham sanPham : sp) {
            Object[] row = {sanPham.getMASP(), sanPham.getTENSP(),
                sanPham.getSOLUONG(), sanPham.getDONGIA(),
                sanPham.getGHICHU()};
            table.addRow(row);
            tbSanPham.setModel(table);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btLamMoiHD;
    private javax.swing.JButton btnQRKH;
    private javax.swing.JButton btnXuatHoaDon;
    private javax.swing.JComboBox<String> cbbLoai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel lbDonGia;
    private javax.swing.JPanel lbDonGiaTam;
    private javax.swing.JLabel lbMaDH;
    private javax.swing.JLabel lbMaMonAn;
    private javax.swing.JLabel lbNgayTao;
    private javax.swing.JLabel lbTenMonAn;
    private javax.swing.JLabel lbTienThoi;
    public static javax.swing.JLabel lbTongTien;
    private javax.swing.JTable tbHoaDon;
    private javax.swing.JTable tbSanPham;
    public static javax.swing.JTextField tfDiem;
    private javax.swing.JTextArea tfGhiChu;
    public static javax.swing.JTextField tfGiamGia;
    private javax.swing.JTextField tfKhachDua;
    private javax.swing.JTextField tfSearch;
    public static javax.swing.JTextField tfTenKH;
    // End of variables declaration//GEN-END:variables
}
